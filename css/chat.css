.header-wrapper {
  position: fixed;
  z-index: 2;
  top: 0px;
  width: 100%;
  background-color: white;
  padding: 10px 0px;
  box-shadow: 0 18px 36px -18px rgba(0, 0, 0, 0.3),
    0 -12px 36px -8px rgba(0, 0, 0, 0.025);
}

.chats-body {
  padding: 5px 0px;
  padding-top: 100px;
}
.chats-body .status-bar,
.chats-body .header {
  padding: 0px 20px;
}
.chats-body {
  background-image: url("../images/2323.png");
  min-height: 1000vh;
}
.chat__write-container {
  position: fixed;
  bottom: 0px;
  margin: 0 auto;
  left: 0;
  right: 0; /*가운데 정렬하는 방법이 위에 3개가*/
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
}

.chat__icon-left {
  position: absolute;
  left: 10px;
}
.chat__icon-right {
  position: absolute;
  right: 20px;
}
@keyframes float {
  0% {
    box-shadow: 0 30px 60px -12px rgba(50, 50, 93, 0.25),
      0 18px 36px -18px rgba(0, 0, 0, 0.3),
      0 -12px 36px -8px rgba(0, 0, 0, 0.025);
  }
  50% {
    box-shadow: 0 30px 60px -60px rgba(50, 50, 93, 0.25),
      0 18px 36px -18px rgba(0, 0, 0, 0.3),
      0 -12px 36px -8px rgba(0, 0, 0, 0.025);
  }
  100% {
    box-shadow: 0 30px 60px -12px rgba(50, 50, 93, 0.25),
      0 18px 36px -18px rgba(0, 0, 0, 0.3),
      0 -12px 36px -8px rgba(0, 0, 0, 0.025);
  }
}
.chat__write {
  bottom: 0px;
  width: 100%;
  margin: 0 auto; /*가운데로 보내는 것 , :focus에 있으면 transition 할수 없어서 되돌아 갈떄 튀어서 내력감*/
  border-radius: 0px;
  padding: 20px 60px;
  width: 100%;
  border: none;
  font-size: 14px;
  transition: width 0.5s ease-in, border-radius 0.5s ease-in,
    transform 1s ease-in;
}
.chat__write:focus {
  outline: none;
  width: 80%;
  transform: translate y(-100px);
  border-radius: 40px;
  /* box-shadow: 0 30px 60px -12px rgba(50, 50, 93, 0.25),
    0 18px 36px -18px rgba(0, 0, 0, 0.3), 0 -12px 36px -8px rgba(0, 0, 0, 0.025); */
  /*rgba 마지막값은 opacity값임*/
  animation: float 3s linear infinite forwards;
}

.chat__icon {
  font-size: 18px;
  transition: opacity 0.3s ease-in-out;
}
.chat__write:focus ~ .chat__icon/*~는 chat__write다음에 있는 sibling만 을 선택할수 있다. 그전에 있는 건 절대 선택 불가. html에서 아이콘이 input 다음에 있어야 이런 효과를 만들어 줄수 있다. 
CSS는 위에서 아래로 작동하기 때문에 */ {
  opacity: 0;
}

.chat__write i {
  font-size: 22px;
}
.chat__write-column:nth-child(2) {
  width: 80%;
}

.chat-screen .chat__messages {
  border-top: 1px solid #f7f7f7;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 0px 20px;
  padding-top: 30px; /*이 두코드의 순서도 중요하다*/
}

.chat__messages .chat__timestamp {
  background-color: white;
  font-size: 14px;
  padding: 5px 10px;
  border-radius: 10px;
  margin-bottom: 30px;
  box-shadow: rgba(0, 0, 0, 0.3) 0px 8px 15px -8px,
    rgba(0, 0, 0, 0.024) 0px -6px 16px -6px;
  text-transform: uppercase; /*대문자로 바꿔줌*/
  font-weight: 700;
}

.message {
  display: flex;
  align-items: flex-start;
  margin-bottom: 20px;
}

.incoming-message {
  align-self: flex-start;
}
.sent-message {
  align-self: flex-end;
}
@keyframes spin {
  from {
    transform: none;
  }
  to {
    transform: rotateY(1turn);
  }
}
.incoming-message img {
  width: 65px;
  height: 55px;
  border-radius: 15px;
  margin-right: 15px;
  box-shadow: rgba(0, 0, 0, 0.3) 0px 8px 15px -8px,
    rgba(0, 0, 0, 0.024) 0px -6px 16px -6px;
  animation: spin 1s linear infinite;
}

.message .message__bubble {
  background-color: white;
  box-shadow: rgba(0, 0, 0, 0.3) 0px 8px 15px -8px,
    rgba(0, 0, 0, 0.024) 0px -6px 16px -6px;
  padding: 10px 20px;
  border-radius: 20px;
  color: white;
  font-weight: 600;
}

.incoming-message .message__author {
  margin-bottom: 20px;
  display: block;
  font-weight: 600;
  font-size: 12px;
}

.incoming-message .message__bubble {
  border-bottom-left-radius: 0px;
  background-image: linear-gradient(to left, #2c3e50, #4ca1af);
}

.sent-message .message__bubble {
  border-bottom-right-radius: 0px;
  background-image: linear-gradient(#e0eafc, #cfdef3);
}

@keyframes incomingAnim {
  from {
    /* opacity: 0; */
    transform: translateX(-200px);
  }
  to {
    /* opacity: 1; */
    transform: none;
  }
}

.incoming-message {
  animation: incomingAnim 0.5s linear forward;
}

@keyframes sentAnimation {
  from {
    opacity: 0;
    transform: translatex(200px);
  }
  to {
    opacity: 1;
    transform: none;
  }
}
.sent-message {
  animation: sentAnimation 0.5s ease-out forward;
  /*forward는 value값이 끝까지 유지가 된다는 것을 뜻함.*/
}
